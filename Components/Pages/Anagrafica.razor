@page "/Anagrafica"
@using MySql.Data.MySqlClient
<PageTitle>Anagrafica</PageTitle>
@rendermode InteractiveServer


<div class="corpo">
    <div class="toolbar">
        <div class="slideContainer">
            <button class="slideSelez">PAZIENTI</button>
            <button class="slide">CLIENTI</button>
            <button class="slide">FORNITORI</button>
            <button class="slide">CONTATTI</button>
        </div>
        <div class="buttonContainer">
            <button class="defButton" @onclick="@toggleForm">AGGIUNGI</button>
            <button class="defButton">MODIFICA</button>
            <button class="defButton" @onclick="deleteFromDB">ELIMINA</button>
            <button class="defButtonSmall">STAMPA</button>
            <input type="text" placeholder="Ricerca" @bind-value="searchQuery" @oninput="CercaPersona" class="inputSmall"/>
            <div class="insNumero">
                <div class="side">N</div>
                <input type="number" class="number"/>
            </div>
            <input type="text" placeholder="Avanzata" class="inputLarge"/>
        </div>
    </div>

    <div class="list">
        <table class="styled-table">
            <thead>
            <tr class="headTable">
                <th>COGNOME</th>
                <th>NOME</th>
                <th>DATA DI NASCITA</th>
                <th>TELEFONO</th>
                <th>CELLULARE</th>
                <th>CELLULARE 2</th>
                <th>DA FATTURARE</th>
                <th>TERMINATE</th>
                <th>DOCUMENTATO</th>
                <th>
                    <div>Lock</div>
                </th>
            </tr>
            </thead>
            <tbody>

            <!-- Qui vengono aggiunte le righe della tabella -->
            @foreach (var paziente in pazienti)
            {
                <tr @onclick="() => updateLastClicked(paziente)">
                    <td>@paziente.Surname</td>
                    <td>@paziente.FirstName</td>
                    <td>@paziente.BirthDate</td>
                    <td>@paziente.Telephone</td>
                    <td>@paziente.Phone1</td>
                    <td>@paziente.Phone2</td>
                    <td>@paziente.Billable</td>
                    <td>@(paziente.Completed ? "SÌ" : "NO")</td>
                    <td>@(paziente.Documented ? "SÌ" : "NO")</td>
                    <td>
                        <input type="checkbox"/>
                    </td>
                </tr>
            }

            </tbody>
        </table>

    </div>
</div>


@if (visible)
{
    <div class="oscuramento">
        <!-- div contenente il pop-up per l'inserimento dei dati -->
        <div class="Inserimento">
            <!-- div contenente la barra superiore -->
            <div>
                <div class="inline buttonFormContainer">
                    <button class="buttonFormSelected">DATI PERSONALI</button>
                    <button class="buttonForm">FAMILIARI</button>
                    <button class="buttonForm">CONTATTI - FATTURAZIONE</button>
                    <button class="buttonForm">NOTE</button>
                </div>
                <div class="inline">
                    <button @onclick="@toggleForm" class="exitButton">X</button>
                </div>
            </div>
            <div class="containerForm">
                <div class="forms">
                    <!-- div colonna a sinistra -->
                    <div class=" sx">
                        <!-- div contenente i form principali -->
                        <div>
                            <div class="inline containerInput">
                                COGNOME*<br/>
                                <input type="text" @bind="nuovoPaziente.Surname" class="inputForm" placeholder="Poretti"/>
                            </div>
                            <div class="inline containerInput">
                                NOME*<br/>
                                <input type="text" @bind="nuovoPaziente.FirstName" class="inputForm" placeholder="Giacomo"/>
                            </div><br/>
                            <div class="inline containerInput">
                                <div>
                                    LUOGO DI NASCITA
                                    <div class="inline checkbox">estero<input @bind="nuovoPaziente.Foreigner" type="checkbox"></div>
                                </div>
                                <input type="text" class="inputForm" placeholder="Milano"/>
                            </div>
                            <div class="inline containerInputSmall">
                                PROVINCIA<br/>
                                <input type="text" @bind="nuovoPaziente.BirthProvince" class="inputForm" placeholder="Milano"/>
                            </div>
                            <div class="inline containerInputSmall">
                                SESSO<br/>
                                <select type="select" @bind="gender" class="inputFormScleta" placeholder=" ">
                                    <option value="m">Maschio</option>
                                    <option value="f">Femmina</option>
                                </select>
                            </div><br/>
                            <div class="inline containerInputSmall">
                                DATA NASCITA<br/>
                                <input type="date" @bind="nuovoPaziente.BirthDate" class="inputFormData"/>
                            </div>
                            <div class="inline containerInputSmall">
                                CODICE ASL<br/>
                                <input type="text" @bind="nuovoPaziente.CAsl" class="inputForm" placeholder="MI333"/>
                            </div>
                            <div class="inline containerInput">
                                <div>
                                    CODICE FISCALE
                                    <div class="inline checkbox">cont. validità<input type="checkbox"></div>
                                </div>
                                <input type="text" class="inputForm" @bind="nuovoPaziente.CF" placeholder="PRTGCM64H07F205D"/>
                            </div><br/>
                            <div class="inline containerInputSmall">
                                CATEGORIA<br/>
                                <select type="select" class="inputFormScleta" placeholder=" ">
                                    <option value="p">Prova</option>
                                </select>
                            </div>
                            <div class="inline containerInputSmall">
                                MEDICO<br/>
                                <input type="text" @bind="nuovoPaziente.DoctorID" class="inputForm" placeholder="Ippocrate"/>
                            </div>
                            <div class="inline containerInput">
                                PROFESSIONE<br/>
                                <select type="select" class="inputFormScleta"placeholder=" ">
                                    <option value="p">Prova</option>
                                </select>
                            </div><br/>
                            <div class="inline containerInputLarge">
                                INDIRIZZI<br/>
                                <input type="text" class="inputFormLarge"placeholder="Via ..."/>
                            </div>
                        </div>

                    </div><!-- div contenente le referenze -->
                    <br/>
                    <div class="sx">
                        REFERENZE<br/>
                        <div class="inline pulsanti">
                            <button class="buttonOpzioniForm">MOTIVO</button>
                            <button class="buttonOpzioniForm">NOMINATIVO</button>
                            <button class="buttonOpzioniForm">NOTE</button>
                        </div>
                    </div>
                </div>
                <!-- div colonna destra contenente i tasti di salvataggio ecc. -->
                <div class="dx">
                    <button class="buttonAzioniForm">SALVA</button><br/>
                    <button class="buttonAzioniForm">SALVA E APRI</button><br/>
                    <button class="buttonAzioniForm" @onclick="salvaPaziente">SALVA E CHIUDI</button><br/>
                    <button class="buttonAzioniForm">ANNULLA</button><br/>
                    <button class="buttonAzioniForm">STAMPA</button><br/>
                    @if (showFormErr)
                    {
                        <div>Verificare i dati immessi</div>
                    }
                    <button class="buttonAzioniFormIcona">IMPORTA CLIENTE</button>
                </div>
            </div>
        </div>

    </div>
}

@code {

    public class Persona
    {
        public string Nome { get; set; }
        public string Cognome { get; set; }
        public DateTime DataNascita { get; set; }
        public string Sesso { get; set; }

        public override string ToString()
        {
            return $"{Nome};{Cognome};{DataNascita:dd/MM/yyyy};{Sesso}";
        }

        public static Persona FromString(string linea)
        {
            var dati = linea.Split(';');
            return new Persona
            {
                Nome = dati[0],
                Cognome = dati[1],
                DataNascita = DateTime.ParseExact(dati[2], "dd/MM/yyyy", null),
                Sesso = dati[3]
            };
        }
    }

    //PRIMA

    private bool visible = false;
    private List<Persona> personeFiltrate = new List<Persona>();
    private string filePath;
    private string searchQuery = string.Empty;

    //DOPO

    Paziente nuovoPaziente = new();
    List<Paziente> pazienti = new();
    string gender;
    private string tableRows = "";
    private bool showFormErr = false;
    Paziente lastClickedP = null;

    protected override void OnInitialized()
    {
        getAllFromDB();
    }

    private void toggleForm()
    {
        visible = !visible;
    }

    private void getAllFromDB()
    {
        DbManager db = new DbManager();
        string query = "SELECT * FROM PATIENT";

        try
        {
            using (MySqlDataReader reader = db.ExecuteReader(query))
            {
                while (reader.Read())
                {
                    Paziente paziente = new Paziente().getFromDBReader(reader);
                    pazienti.Add(paziente);
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("Errore durante il recupero dei pazienti: " + e.Message);
            throw;
        }

        db.CloseConnection();
    }

    private void CercaPersona(ChangeEventArgs e)
    {
        /*
            searchQuery = e.Value.ToString();
            var searchTerms = searchQuery.Split(' ', StringSplitOptions.RemoveEmptyEntries);

            personeFiltrate = persone.Where(p =>
                searchTerms.All(term =>
                    p.Nome.Contains(term, StringComparison.OrdinalIgnoreCase) ||
                    p.Cognome.Contains(term, StringComparison.OrdinalIgnoreCase)
                )
            ).ToList();*/
    }

    public void salvaPaziente()
    {
        nuovoPaziente.Gender = determinaSesso(gender);
        if (checkInputs())
        {
            //salva il paziente
            Paziente paziente = new Paziente(nuovoPaziente.FirstName, nuovoPaziente.Surname, (gender == "m" ? false : true), "0000000000", "0000000000", "0000000000", "0000000000000000", "0000", nuovoPaziente.BirthDate, "Prova", nuovoPaziente.Foreigner, "Prova", "Prova", false, false, 1, nuovoPaziente.Locked);

            pazienti.Add(paziente);

            paziente.SaveInDB();
            //se è visibile lo tolgo
            if (showFormErr) showFormErr = !showFormErr;
            toggleForm();
        }
        else
        {
            //mostro l'errore
            showFormErr = !showFormErr;
        }
    }

    public bool determinaSesso(string genderOfPerson)
    {
        bool flagGender = false;

        // false = maschio, true = femmina
        if (genderOfPerson == "M" || genderOfPerson == "m")
        {
            flagGender = false;
        }
        else if (genderOfPerson == "F" || genderOfPerson == "f")
        {
            flagGender = true;
        }

        return flagGender;
    }

    public bool checkInputs()
    {
        return true;
    }

    public void updateLastClicked(Paziente p)
    {
        lastClickedP = p;
    }

    public void deleteFromDB()
    {
        if (lastClickedP!=null)
        {
            string query = $"DELETE FROM PATIENT WHERE patientID=" + lastClickedP.PatientID;
            DbManager db = new DbManager();
            db.MakeQuery(query);
            pazienti.Remove(lastClickedP);
            lastClickedP = null;
        }
        
    }

}